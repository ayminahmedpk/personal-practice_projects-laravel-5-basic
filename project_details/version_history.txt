

0.0.7
  - deletion implemented
    - delete button as submit for form with method_field('DELETE') and
      csrf_token()


0.0.6
  - editing implemented, with this flow:
    -> edit button (on show view)
    -> edit route
    -> controller@edit
    -> edit view
    -> form
       -> action to controller with paremeter
          action="{{ action('PostsController@update', $post->id) }}" method="post"
       -> method field for PUT
          {{ method_field('PUT') }}
    -> controller@update (with parameter)
    -> redirect (to DYNAMIC defined route WITH cached parameters)
          return redirect()->route('posts.show', ['id' => $id])->with($data);


0.0.5
  - Making navbar an include as well
  - Including validation messages
  - Adding validation to PostsController->store()
  - Implementing store in PostsController->store()
  - Form on post.create view for submitting to PostsController@store
  - Creating post route -> controller -> view


0.0.4
  - Set up pagination in posts index
  - Set up sorting in posts index
  - Set up posts show (read individual post)
    - Configured the posts.show view
    - Made PostsController@show fetch the right post based on $id
      (route with resource already gets $id as dynamic parameter)
    - Made PostsController@show return the show view, ->with $post
  - Set up posts index (list all posts)
    - Configured the posts.index view
    - Made PostsController@index fetch all posts
    - Made PostsController@index return the index view, ->with $posts
  - Configured controller for posts (resource)
  - Configured routes for posts (resource)
  - Added sample data to posts table using artisan -> tinker -> eloquent
  - Ran the created (and pre-included) migrations
  - Populated the migration
  - Created Post model and migration with Artisan
  - Created db in phpmyadmin
  - Configured connection to mysql


0.0.3:
  - Navbar (own simplistic navbar, full links)
  - Flow:
      Route
      -> Controller
      -> View
  - Blade templates
    - extending / yield
    - config()
    - if control (conditional rendering)
    - foreach loop (mapping)
  - Passing values to views


0.0.2:
  - Page views (index, about, services)
  - PagesController (using artisan)
    -> relevant view in /resources/views/pages/*.blade.php
  - Routes for /, /index, /services
    -> relevant method in PagesController


0.0.1:
  - Tried compiling css, can't compile due to version and compatibility issues
  - Tried the changes to the hosts file, couldn't make it work



init